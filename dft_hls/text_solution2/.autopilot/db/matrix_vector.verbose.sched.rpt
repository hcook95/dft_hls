

================================================================
== Vitis HLS Report for 'matrix_vector'
================================================================
* Date:           Wed Mar 10 23:25:00 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        dft_hls
* Solution:       text_solution2 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  10.00 ns|  15.210 ns|     2.70 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      265|      265|  4.031 us|  4.031 us|  266|  266|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |           Loop Name          |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- data_loop_dot_product_loop  |      263|      263|        12|          4|          1|    64|       yes|
        +------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 1
  Pipeline-0 : II = 4, D = 12, States = { 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 14 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 2 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 15 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %M_0, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %M_0"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %M_1, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %M_1"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %V_In_0, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %V_In_0"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %V_In_1, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %V_In_1"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %V_Out, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %V_Out"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%br_ln8 = br void" [simple_dft.cpp:8]   --->   Operation 26 'br' 'br_ln8' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.01>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i7 0, void, i7 %add_ln8_1, void %ifFalse" [simple_dft.cpp:8]   --->   Operation 27 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%i = phi i4 0, void, i4 %select_ln8_2, void %ifFalse" [simple_dft.cpp:8]   --->   Operation 28 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%j = phi i4 0, void, i4 %add_ln12, void %ifFalse" [simple_dft.cpp:12]   --->   Operation 29 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.48ns)   --->   "%icmp_ln8 = icmp_eq  i7 %indvar_flatten, i7 64" [simple_dft.cpp:8]   --->   Operation 30 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %icmp_ln8, void %.split2, void" [simple_dft.cpp:8]   --->   Operation 31 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.73ns)   --->   "%add_ln8 = add i4 %i, i4 1" [simple_dft.cpp:8]   --->   Operation 32 'add' 'add_ln8' <Predicate = (!icmp_ln8)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.30ns)   --->   "%icmp_ln12 = icmp_eq  i4 %j, i4 8" [simple_dft.cpp:12]   --->   Operation 33 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln8)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.02ns)   --->   "%select_ln8 = select i1 %icmp_ln12, i4 0, i4 %j" [simple_dft.cpp:8]   --->   Operation 34 'select' 'select_ln8' <Predicate = (!icmp_ln8)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.02ns)   --->   "%select_ln8_2 = select i1 %icmp_ln12, i4 %add_ln8, i4 %i" [simple_dft.cpp:8]   --->   Operation 35 'select' 'select_ln8_2' <Predicate = (!icmp_ln8)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i4 %select_ln8" [simple_dft.cpp:12]   --->   Operation 36 'trunc' 'trunc_ln12' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %select_ln8, i32 1, i32 2" [simple_dft.cpp:14]   --->   Operation 37 'partselect' 'lshr_ln' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i2 %lshr_ln" [simple_dft.cpp:14]   --->   Operation 38 'zext' 'zext_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %select_ln8_2, i2 %lshr_ln" [simple_dft.cpp:14]   --->   Operation 39 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i6 %tmp" [simple_dft.cpp:14]   --->   Operation 40 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%M_0_addr = getelementptr i32 %M_0, i64 0, i64 %zext_ln14_1" [simple_dft.cpp:14]   --->   Operation 41 'getelementptr' 'M_0_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%M_1_addr = getelementptr i32 %M_1, i64 0, i64 %zext_ln14_1" [simple_dft.cpp:14]   --->   Operation 42 'getelementptr' 'M_1_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%V_In_0_addr = getelementptr i32 %V_In_0, i64 0, i64 %zext_ln14" [simple_dft.cpp:14]   --->   Operation 43 'getelementptr' 'V_In_0_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (2.32ns)   --->   "%V_In_0_load = load i2 %V_In_0_addr" [simple_dft.cpp:14]   --->   Operation 44 'load' 'V_In_0_load' <Predicate = (!icmp_ln8)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 45 [2/2] (3.25ns)   --->   "%M_0_load = load i5 %M_0_addr" [simple_dft.cpp:14]   --->   Operation 45 'load' 'M_0_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%V_In_1_addr = getelementptr i32 %V_In_1, i64 0, i64 %zext_ln14" [simple_dft.cpp:14]   --->   Operation 46 'getelementptr' 'V_In_1_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 47 [2/2] (2.32ns)   --->   "%V_In_1_load = load i2 %V_In_1_addr" [simple_dft.cpp:14]   --->   Operation 47 'load' 'V_In_1_load' <Predicate = (!icmp_ln8)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 48 [2/2] (3.25ns)   --->   "%M_1_load = load i5 %M_1_addr" [simple_dft.cpp:14]   --->   Operation 48 'load' 'M_1_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 49 [1/1] (1.73ns)   --->   "%add_ln12 = add i4 %select_ln8, i4 1" [simple_dft.cpp:12]   --->   Operation 49 'add' 'add_ln12' <Predicate = (!icmp_ln8)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.30ns)   --->   "%icmp_ln12_1 = icmp_eq  i4 %add_ln12, i4 8" [simple_dft.cpp:12]   --->   Operation 50 'icmp' 'icmp_ln12_1' <Predicate = (!icmp_ln8)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln12 = br i1 %icmp_ln12_1, void %ifFalse, void %ifTrue" [simple_dft.cpp:12]   --->   Operation 51 'br' 'br_ln12' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 52 'br' 'br_ln0' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.95>
ST_3 : Operation 53 [1/2] (2.32ns)   --->   "%V_In_0_load = load i2 %V_In_0_addr" [simple_dft.cpp:14]   --->   Operation 53 'load' 'V_In_0_load' <Predicate = (!icmp_ln8)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 54 [1/2] (3.25ns)   --->   "%M_0_load = load i5 %M_0_addr" [simple_dft.cpp:14]   --->   Operation 54 'load' 'M_0_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 55 [1/2] (2.32ns)   --->   "%V_In_1_load = load i2 %V_In_1_addr" [simple_dft.cpp:14]   --->   Operation 55 'load' 'V_In_1_load' <Predicate = (!icmp_ln8)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 56 [1/2] (3.25ns)   --->   "%M_1_load = load i5 %M_1_addr" [simple_dft.cpp:14]   --->   Operation 56 'load' 'M_1_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 57 [1/1] (0.69ns)   --->   "%select_ln14 = select i1 %trunc_ln12, i32 %V_In_1_load, i32 %V_In_0_load" [simple_dft.cpp:14]   --->   Operation 57 'select' 'select_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.69ns)   --->   "%select_ln14_1 = select i1 %trunc_ln12, i32 %M_1_load, i32 %M_0_load" [simple_dft.cpp:14]   --->   Operation 58 'select' 'select_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.70>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%bitcast_ln14 = bitcast i32 %select_ln14_1" [simple_dft.cpp:14]   --->   Operation 59 'bitcast' 'bitcast_ln14' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%bitcast_ln14_1 = bitcast i32 %select_ln14" [simple_dft.cpp:14]   --->   Operation 60 'bitcast' 'bitcast_ln14_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_4 : Operation 61 [4/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln14_1, i32 %bitcast_ln14" [simple_dft.cpp:14]   --->   Operation 61 'fmul' 'mul' <Predicate = (!icmp_ln8)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 62 [1/1] (1.87ns)   --->   "%add_ln8_1 = add i7 %indvar_flatten, i7 1" [simple_dft.cpp:8]   --->   Operation 62 'add' 'add_ln8_1' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [3/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln14_1, i32 %bitcast_ln14" [simple_dft.cpp:14]   --->   Operation 63 'fmul' 'mul' <Predicate = (!icmp_ln8)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.70>
ST_6 : Operation 64 [2/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln14_1, i32 %bitcast_ln14" [simple_dft.cpp:14]   --->   Operation 64 'fmul' 'mul' <Predicate = (!icmp_ln8)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.70>
ST_7 : Operation 65 [1/4] (5.70ns)   --->   "%mul = fmul i32 %bitcast_ln14_1, i32 %bitcast_ln14" [simple_dft.cpp:14]   --->   Operation 65 'fmul' 'mul' <Predicate = (!icmp_ln8)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.95>
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "%sum = phi i32 0, void, i32 %sum_1, void %ifFalse"   --->   Operation 66 'phi' 'sum' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_8 : Operation 67 [1/1] (0.69ns)   --->   "%select_ln8_1 = select i1 %icmp_ln12, i32 0, i32 %sum" [simple_dft.cpp:8]   --->   Operation 67 'select' 'select_ln8_1' <Predicate = (!icmp_ln8)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 68 [5/5] (7.25ns)   --->   "%sum_1 = fadd i32 %select_ln8_1, i32 %mul" [simple_dft.cpp:14]   --->   Operation 68 'fadd' 'sum_1' <Predicate = (!icmp_ln8)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 15.2>
ST_9 : Operation 69 [4/5] (7.25ns)   --->   "%sum_1 = fadd i32 %select_ln8_1, i32 %mul" [simple_dft.cpp:14]   --->   Operation 69 'fadd' 'sum_1' <Predicate = (!icmp_ln8)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 15.2>
ST_10 : Operation 70 [3/5] (7.25ns)   --->   "%sum_1 = fadd i32 %select_ln8_1, i32 %mul" [simple_dft.cpp:14]   --->   Operation 70 'fadd' 'sum_1' <Predicate = (!icmp_ln8)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 15.2>
ST_11 : Operation 71 [2/5] (7.25ns)   --->   "%sum_1 = fadd i32 %select_ln8_1, i32 %mul" [simple_dft.cpp:14]   --->   Operation 71 'fadd' 'sum_1' <Predicate = (!icmp_ln8)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 15.2>
ST_12 : Operation 72 [1/5] (7.25ns)   --->   "%sum_1 = fadd i32 %select_ln8_1, i32 %mul" [simple_dft.cpp:14]   --->   Operation 72 'fadd' 'sum_1' <Predicate = (!icmp_ln8)> <Delay = 7.25> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 2.32>
ST_13 : Operation 73 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @data_loop_dot_product_loop_str"   --->   Operation 73 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 74 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 74 'speclooptripcount' 'empty' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i4 %select_ln8_2" [simple_dft.cpp:8]   --->   Operation 75 'zext' 'zext_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 76 [1/1] (0.00ns)   --->   "%specpipeline_ln6 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [simple_dft.cpp:6]   --->   Operation 76 'specpipeline' 'specpipeline_ln6' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 77 [1/1] (0.00ns)   --->   "%specloopname_ln6 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [simple_dft.cpp:6]   --->   Operation 77 'specloopname' 'specloopname_ln6' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_13 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln16 = bitcast i32 %sum_1" [simple_dft.cpp:16]   --->   Operation 78 'bitcast' 'bitcast_ln16' <Predicate = (icmp_ln12_1)> <Delay = 0.00>
ST_13 : Operation 79 [1/1] (0.00ns)   --->   "%V_Out_addr = getelementptr i32 %V_Out, i64 0, i64 %zext_ln8" [simple_dft.cpp:16]   --->   Operation 79 'getelementptr' 'V_Out_addr' <Predicate = (icmp_ln12_1)> <Delay = 0.00>
ST_13 : Operation 80 [1/1] (2.32ns)   --->   "%store_ln16 = store i32 %bitcast_ln16, i3 %V_Out_addr" [simple_dft.cpp:16]   --->   Operation 80 'store' 'store_ln16' <Predicate = (icmp_ln12_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 81 'br' 'br_ln0' <Predicate = (icmp_ln12_1)> <Delay = 0.00>

State 14 <SV = 8> <Delay = 0.00>
ST_14 : Operation 82 [1/1] (0.00ns)   --->   "%ret_ln18 = ret" [simple_dft.cpp:18]   --->   Operation 82 'ret' 'ret_ln18' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', simple_dft.cpp:8) with incoming values : ('add_ln8_1', simple_dft.cpp:8) [19]  (1.59 ns)

 <State 2>: 6.01ns
The critical path consists of the following:
	'phi' operation ('i', simple_dft.cpp:8) with incoming values : ('select_ln8_2', simple_dft.cpp:8) [20]  (0 ns)
	'add' operation ('add_ln8', simple_dft.cpp:8) [27]  (1.74 ns)
	'select' operation ('select_ln8_2', simple_dft.cpp:8) [33]  (1.02 ns)
	'getelementptr' operation ('M_0_addr', simple_dft.cpp:14) [42]  (0 ns)
	'load' operation ('M_0_load', simple_dft.cpp:14) on array 'M_0' [46]  (3.25 ns)

 <State 3>: 3.95ns
The critical path consists of the following:
	'load' operation ('M_0_load', simple_dft.cpp:14) on array 'M_0' [46]  (3.25 ns)
	'select' operation ('select_ln14_1', simple_dft.cpp:14) [51]  (0.698 ns)

 <State 4>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul', simple_dft.cpp:14) [54]  (5.7 ns)

 <State 5>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul', simple_dft.cpp:14) [54]  (5.7 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul', simple_dft.cpp:14) [54]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('mul', simple_dft.cpp:14) [54]  (5.7 ns)

 <State 8>: 7.95ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', simple_dft.cpp:14) [22]  (0 ns)
	'select' operation ('select_ln8_1', simple_dft.cpp:8) [32]  (0.698 ns)
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)

 <State 9>: 15.2ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)
	'phi' operation ('sum') with incoming values : ('sum', simple_dft.cpp:14) [22]  (0 ns)
	'select' operation ('select_ln8_1', simple_dft.cpp:8) [32]  (0.698 ns)
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)

 <State 10>: 15.2ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)
	'phi' operation ('sum') with incoming values : ('sum', simple_dft.cpp:14) [22]  (0 ns)
	'select' operation ('select_ln8_1', simple_dft.cpp:8) [32]  (0.698 ns)
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)

 <State 11>: 15.2ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)
	'phi' operation ('sum') with incoming values : ('sum', simple_dft.cpp:14) [22]  (0 ns)
	'select' operation ('select_ln8_1', simple_dft.cpp:8) [32]  (0.698 ns)
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)

 <State 12>: 15.2ns
The critical path consists of the following:
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)
	'phi' operation ('sum') with incoming values : ('sum', simple_dft.cpp:14) [22]  (0 ns)
	'select' operation ('select_ln8_1', simple_dft.cpp:8) [32]  (0.698 ns)
	'fadd' operation ('sum', simple_dft.cpp:14) [55]  (7.26 ns)

 <State 13>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('V_Out_addr', simple_dft.cpp:16) [61]  (0 ns)
	'store' operation ('store_ln16', simple_dft.cpp:16) of variable 'bitcast_ln16', simple_dft.cpp:16 on array 'V_Out' [62]  (2.32 ns)

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
